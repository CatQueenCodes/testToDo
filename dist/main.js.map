{"version":3,"sources":["webpack://Project-ToDo-List/./src/index.js","webpack://Project-ToDo-List/./src/mod/Project.js","webpack://Project-ToDo-List/./src/mod/Task.js","webpack://Project-ToDo-List/./src/mod/dom.js","webpack://Project-ToDo-List/webpack/bootstrap","webpack://Project-ToDo-List/webpack/runtime/define property getters","webpack://Project-ToDo-List/webpack/runtime/hasOwnProperty shorthand","webpack://Project-ToDo-List/webpack/runtime/make namespace object","webpack://Project-ToDo-List/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;AAC+B;AACM;;;;;;;;;;;;;;;;;;ACDM;;;AAG3C;;AAEO;AACP;AACA;AACA;AACA,kBAAkB,2CAAK;AACvB;AACA;;AAEA,c;AACA;AACA,+BAA+B,mDAAa;;AAE5C,6BAA6B,mDAAa;AAC1C;;AAEA,4BAA4B,mDAAa;AACzC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,+DAA+D;AAC/D;;;;;;;;;;;;;;;;;ACjC2C;;AAE3C;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2CAAK;AACvB;;AAEA;AACA,4BAA4B,mDAAa,8C;AACzC;;AAEA,+BAA+B,mDAAa;AAC5C;;AAEA;AACA,yBAAyB,mDAAa;AACtC,6BAA6B,mDAAa;AAC1C,yBAAyB,mDAAa;;AAEtC,6BAA6B,mDAAa;AAC1C;AACA;AACA;;AAEA,6DAA6D;AAC7D;;;AAGA;;AAEA,iD;;;;;;;;;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["\nimport {Task} from './mod/Task'\nimport {Project} from './mod/Project'\n\n","\nimport {setId, createElement} from './dom';\n\n\nconst projectContainer = document.getElementById('projectsHolder');\n\nexport class Project {\n    constructor(project, description) {\n        this.project = project;\n        this.description = description;\n        this.id = setId();\n        this.tasks = [];\n    }\n\n    render() {  \n        //event listener for selecting specific projects\n        const projectWrapper = createElement('div', this.id, 'project', null, projectContainer);\n\n        const deleteButton = createElement('button', null, 'projectDeleteButton', 'X', projectWrapper);\n        //event listener for deleting project\n\n        const projectName = createElement('div', null, 'projectName', this.name, projectWrapper);\n    }\n\n    //render method for projects\n\n    //render tasks in project\n    \n    //delete tasks     sets current task\n    //edit tasks sets current task\n}\n\nlet project1 = new Project('project1', 'this fucking project'); console.log(project1);\nproject1.render();\n\n","import {setId, createElement} from './dom';\n\n//create task object and render task ability\n\nconst taskContainer = document.getElementById('tasksHolder');\n\nexport class Task {\n    constructor(name, description, priority, date){\n        this.name = name;\n        this.description = description;\n        this.priority = priority;\n        this.date = date;\n        this.completedStatus = false;\n        this.id = setId();\n    }\n\n    render() {\n        const taskWrapper = createElement('div', this.id, 'task', null, taskContainer); \n        //event listener for click/edit?  //set specific task?\n\n        const completeButton = createElement('button', null, 'taskCompleteButton', 'âœ“', taskWrapper);\n        //event listener for changing status?\n\n        (this.completedStatus === false) ? completeButton.style.backgroundColor = '#EFEFEF' : completeButton.style.backgroundColor = 'rgb(115, 155, 96)';\n        const taskName = createElement('div', null, 'taskNameDiv', this.name, taskWrapper);\n        const taskPriority = createElement('div', null, 'taskPriorityDiv', this.priority, taskWrapper);\n        const taskDate = createElement('div', null, 'taskDateDiv', this.date, taskWrapper);\n\n        const deleteButton = createElement('button', null, 'taskDeleteButton', 'X', taskWrapper);\n        //event listener for delete?\n    }\n}\n\nlet task1 = new Task('grace', 'description', 'high', 'date'); console.log(task1)\ntask1.render();\n\n\nlet selectedTask;\n\n//method for when it is clicked set specific task","//dom function for creating elements\n\nfunction createElement(type, id, classList, info, parent) {\n    const element = document.createElement(type);\n    if(id) element.id = id;\n    if(classList) element.classList.add(classList);\n    if(info) element.textContent = info;\n    if(parent) parent.appendChild(element);\n    return element;\n}\n\n//function for setting IDs for projects or tasks\n\nfunction setId () {\n    return Math.random();\n}\n\n\nexport {setId, createElement}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}